.PHONEY: all force list_targets run clean

CFLAGS=-Wall
CXXFLAGS=-Wall
ASFLAGS=
RUSTFLAGS=-L.

ASSEMBLER_LANGUAGE=x64asm # aarch32asm aarch64asm
COMPILED_LANGUAGES=c cxx rust
TARGET_LANGUAGES=$(ASSEMBLER_LANGUAGE) $(COMPILED_LANGUAGES)
TARGETS=$(foreach FROM,$(TARGET_LANGUAGES),$(foreach TO,$(TARGET_LANGUAGES),$(FROM)2$(TO)))

all: $(TARGETS)

force: clean all

c2c: main_c.o libhello_c.a
	$(CC) $(CFLAGS) $^ -o $@

c2cxx: main_c.o libhello_cxx.a
	$(CC) $(CFLAGS) $^ -o $@

c2aarch32asm: main_c.o libhello_aarch32asm.a
	$(CC) $(CFLAGS) $^ -o $@

c2aarch64asm: main_c.o libhello_aarch64asm.a
	$(CC) $(CFLAGS) $^ -o $@

c2x64asm: main_c.o libhello_x64asm.a
	$(CC) $(CFLAGS) $^ -o $@

c2rust: main_c.o libhello_rust.a
	$(CC) $(CFLAGS) $^ -o $@

cxx2c: main_cxx.o libhello_c.a
	$(CXX) $(CXXFLAGS) $^ -o $@

cxx2cxx: main_cxx.o libhello_cxx.a
	$(CXX) $(CXXFLAGS) $^ -o $@

cxx2aarch32asm: main_cxx.o libhello_aarch32asm.a
	$(CXX) $(CXXFLAGS) $^ -o $@

cxx2aarch64asm: main_cxx.o libhello_aarch64asm.a
	$(CXX) $(CXXFLAGS) $^ -o $@

cxx2x64asm: main_cxx.o libhello_x64asm.a
	$(CXX) $(CXXFLAGS) $^ -o $@

cxx2rust: main_cxx.o libhello_rust.a
	$(CXX) $(CXXFLAGS) $^ -o $@

aarch32asm2c: main_aarch32asm.o libhello_c.a
	$(CC) -m32 $(CFLAGS) $^ -o $@

aarch32asm2cxx: main_aarch32asm.o libhello_cxx.a
	$(CC) -m32 $(CFLAGS) $^ -o $@

aarch32asm2aarch32asm: main_aarch32asm.o libhello_aarch32asm.a
	$(CC) -m32 $(CFLAGS) $^ -o $@

aarch32asm2rust: main_aarch32asm.o libhello_rust.a
	$(CC) -m32 $(CFLAGS) $^ -o $@

aarch64asm2c: main_aarch64asm.o libhello_c.a
	$(CC) -m64 $(CFLAGS) $^ -o $@

aarch64asm2cxx: main_aarch64asm.o libhello_cxx.a
	$(CC) -m64 $(CFLAGS) $^ -o $@

aarch64asm2aarch64asm: main_aarch64asm.o libhello_aarch64asm.a
	$(CC) -m64 $(CFLAGS) $^ -o $@

aarch64asm2rust: main_aarch64asm.o libhello_rust.a
	$(CC) -m64 $(CFLAGS) $^ -o $@

x64asm2c: main_x64asm.o libhello_c.a
	$(CC) $(CFLAGS) $^ -o $@

x64asm2cxx: main_x64asm.o libhello_cxx.a
	$(CC) $(CFLAGS) $^ -o $@

x64asm2x64asm: main_x64asm.o libhello_x64asm.a
	$(CC) $(CFLAGS) $^ -o $@

x64asm2rust: main_x64asm.o libhello_rust.a
	$(CC) $(CFLAGS) $^ -o $@

rust2c: main.rs libhello_c.a
	cp libhello_c.a libhello.a
	rustc $(RUSTFLAGS) $< -o $@

rust2cxx: main.rs libhello_cxx.a
	cp libhello_cxx.a libhello.a
	rustc $(RUSTFLAGS) $< -o $@

rust2aarch32asm: main.rs libhello_aarch32asm.a
	cp libhello_aarch32.a libhello.a
	rustc $(RUSTFLAGS) $< -o $@

rust2aarch64asm: main.rs libhello_aarch64asm.a
	cp libhello_aarch64.a libhello.a
	rustc $(RUSTFLAGS) $< -o $@

rust2x64asm: main.rs libhello_x64asm.a
	cp libhello_x64asm.a libhello.a
	rustc $(RUSTFLAGS) $< -o $@

rust2rust: main.rs libhello_c.a
	mkdir _$@
	cd _$@ && ar -x ../libhello_rust.a
	rm _$@/libhello_rust.4kjqp1i30etsact8.rcgu.o
	libtool  -static _$@/*.o -o libhello.a
	rm -rf _$@
	rustc $(RUSTFLAGS) $< -o $@

lib%.a: %.o
	ar rcs $@ $<

lib%_rust.a: %.rs
	rustc --crate-type=staticlib $< -o $@

%_c.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

%_cxx.o: %.cxx
	$(CXX) $(CXXFLAGS) -c $< -o $@

%_aarch32asm.o: %.aarch32.s
	$(CC) -m32 $(CFLAGS) $< -c -o $@

%_aarch64asm.o: %.aarch64.s
	$(CC) -m64 $(CFLAGS) $< -c -o $@

%_x64asm.o: %.x86_64.s
	$(AS) $(ASFLAGS) $< -o $@

list_targets:
	echo $(TARGETS)

run: $(TARGETS)
	for cmd in $(TARGETS); do ./$${cmd}; done

clean:
	rm -rf *.o *.a $(TARGETS)

